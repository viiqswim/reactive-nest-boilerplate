// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getUser Saga should dispatch the response error 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getUser Saga should dispatch the response error 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getUser Saga should dispatch the response error 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "undefined/users/test",
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getUser Saga should dispatch the user has no user error 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getUser Saga should dispatch the user has no user error 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getUser Saga should dispatch the user has no user error 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "undefined/users/test",
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getUser Saga should dispatch the user not found error 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getUser Saga should dispatch the user not found error 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getUser Saga should dispatch the user not found error 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "undefined/users/test",
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getUser Saga should dispatch the userLoaded action if it requests the data successfully 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getUser Saga should dispatch the userLoaded action if it requests the data successfully 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getUser Saga should dispatch the userLoaded action if it requests the data successfully 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "undefined/users/test",
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getUser Saga should return error if userId is empty 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getUser Saga should return error if userId is empty 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;
